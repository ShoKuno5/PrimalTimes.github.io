---
export interface Props {
  correctPassword: string;
}

const { correctPassword } = Astro.props;
---

<div id="password-overlay" class="fixed inset-0 bg-[var(--bg)] z-50 flex items-center justify-center">
  <div class="max-w-sm w-full mx-4">
    <div class="text-center mb-12">
      <h1 class="text-5xl font-light text-[var(--text)] mb-3 tracking-tight">Enter</h1>
      <div class="w-16 h-px bg-[var(--text)] mx-auto opacity-20"></div>
    </div>
    <form id="password-form" class="space-y-6">
      <input
        type="password"
        id="password-input"
        placeholder="・・・・・・"
        class="w-full p-4 bg-transparent text-[var(--text)] text-center text-lg tracking-widest border-b border-[var(--border)] focus:border-[var(--text)] focus:outline-none transition-colors placeholder:text-[var(--text-secondary)] placeholder:opacity-40"
        autofocus
      />
      <div class="flex justify-center">
        <button
          type="submit"
          class="px-8 py-2 text-sm font-light text-[var(--text-secondary)] hover:text-[var(--text)] transition-colors tracking-wide"
        >
          ACCESS
        </button>
      </div>
      <p id="error-message" class="text-center text-sm text-[var(--text-secondary)] opacity-0 transition-opacity duration-300">
        Try again
      </p>
    </form>
  </div>
</div>

<div id="protected-content" class="hidden">
  <slot />
</div>

<script define:vars={{ correctPassword }}>
  const overlay = document.getElementById('password-overlay');
  const content = document.getElementById('protected-content');
  const form = document.getElementById('password-form');
  const input = document.getElementById('password-input');
  const errorMsg = document.getElementById('error-message');
  
  // Check if password was already entered in this session
  const storedPassword = sessionStorage.getItem('naive-hope-auth');
  if (storedPassword === correctPassword) {
    overlay.style.display = 'none';
    content.classList.remove('hidden');
  }
  
  form.addEventListener('submit', (e) => {
    e.preventDefault();
    const enteredPassword = input.value;
    
    if (enteredPassword === correctPassword) {
      sessionStorage.setItem('naive-hope-auth', enteredPassword);
      overlay.style.display = 'none';
      content.classList.remove('hidden');
    } else {
      errorMsg.style.opacity = '1';
      input.value = '';
      input.focus();
      
      // Hide error message after 2 seconds
      setTimeout(() => {
        errorMsg.style.opacity = '0';
      }, 2000);
    }
  });
  
  // Hide error message when typing
  input.addEventListener('input', () => {
    errorMsg.style.opacity = '0';
  });
</script>