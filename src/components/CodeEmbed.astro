---
import { readFileSync } from 'fs';
import { join } from 'path';

export interface Props {
  src: string;
  title?: string;
  language?: string;
  showLineNumbers?: boolean;
}

const { src, title, language = 'javascript', showLineNumbers = true } = Astro.props;

// Read file content from public/files directory
let content = '';
let filename = src;
try {
  const filePath = join(process.cwd(), 'public', 'files', src);
  content = readFileSync(filePath, 'utf-8');
  filename = src.split('/').pop() || src;
} catch (error) {
  content = `// Error: Could not read file ${src}`;
}
---

<div class="code-embed-container">
  <div class="code-header">
    <div class="code-title">
      <svg width="16" height="16" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4" />
      </svg>
      <span>{title || filename}</span>
    </div>
    <div class="code-meta">
      <span class="language-badge">{language}</span>
      <button class="copy-button" onclick="navigator.clipboard.writeText(this.closest('.code-embed-container').querySelector('code').textContent)">
        <svg width="14" height="14" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
        </svg>
        Copy
      </button>
    </div>
  </div>
  <pre class={`language-${language}`}><code class={`language-${language}`}>{content}</code></pre>
</div>

<style>
  .code-embed-container {
    margin: 2rem 0;
    border: 1px solid #e5e7eb;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
  }
  
  .code-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 1.5rem;
    background: #f8fafc;
    border-bottom: 1px solid #e5e7eb;
  }
  
  .code-title {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-weight: 600;
    color: #374151;
    font-size: 0.9rem;
  }
  
  .code-meta {
    display: flex;
    align-items: center;
    gap: 1rem;
  }
  
  .language-badge {
    background: #e5e7eb;
    color: #6b7280;
    padding: 0.25rem 0.75rem;
    border-radius: 12px;
    font-size: 0.75rem;
    font-weight: 500;
    text-transform: uppercase;
  }
  
  .copy-button {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    background: none;
    border: 1px solid #d1d5db;
    color: #6b7280;
    padding: 0.5rem 0.75rem;
    border-radius: 6px;
    font-size: 0.8rem;
    cursor: pointer;
    transition: all 0.2s ease;
  }
  
  .copy-button:hover {
    background: #f3f4f6;
    border-color: #9ca3af;
    color: #374151;
  }
  
  .code-embed-container pre {
    margin: 0;
    padding: 1.5rem;
    background: #fafbfc;
    overflow-x: auto;
    font-family: 'SF Mono', Monaco, Consolas, 'Liberation Mono', monospace;
    font-size: 0.9rem;
    line-height: 1.6;
  }
  
  .code-embed-container code {
    background: transparent;
    padding: 0;
    border: none;
    color: inherit;
  }
</style>