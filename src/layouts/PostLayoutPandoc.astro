---
import Layout from './Layout.astro';
import { calculateReadingTime } from '../utils/readingTime';

export interface Props {
  title: string;
  date?: Date;
  modified?: Date;
  tags?: string[];
  description?: string;
  showMeta?: boolean;
  content?: string;
  mode?: 'homepage' | 'full';
}

const { title, date, modified, tags, description, showMeta = true, content, mode = 'full' } = Astro.props;

const readingTime = content ? calculateReadingTime(content) : 0;

function formatDate(date: Date) {
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long', 
    day: 'numeric'
  });
}
---

<Layout title={title} description={description}>
  <main class="max-w-4xl mx-auto px-4 py-8">
    <article class="academic-content">
      {showMeta && (
        <header class="mb-8 border-b border-gray-200 pb-6">
          <h1 class="text-4xl font-bold mb-4 text-gray-900">{title}</h1>
          {description && <p class="text-xl text-gray-600 mb-4">{description}</p>}
          
          <div class="flex flex-wrap items-center gap-6 text-sm text-gray-500 mb-4">
            {date && <time datetime={date.toISOString()}>{formatDate(date)}</time>}
            {modified && (
              <span>Updated: <time datetime={modified.toISOString()}>{formatDate(modified)}</time></span>
            )}
            {content && <span>{readingTime} min read</span>}
          </div>
          
          {tags && tags.length > 0 && (
            <div class="flex flex-wrap gap-2">
              {tags.map(tag => (
                <a 
                  href={`/posts/tags/${tag}/`}
                  class="tag-link bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm hover:bg-blue-200 transition-colors"
                >
                  {tag}
                </a>
              ))}
            </div>
          )}
        </header>
      )}

      <div class="content prose prose-lg max-w-none sophisticated-markdown">
        <slot />
      </div>
    </article>
  </main>
</Layout>

<style is:global>
  /* Academic content styling */
  .academic-content {
    font-family: 'Inter', 'Noto Sans JP', -apple-system, BlinkMacSystemFont, system-ui, sans-serif;
    font-size: 1.125rem;
    line-height: 1.8;
    color: #374151;
    letter-spacing: -0.011em;
  }
  
  .academic-content h1 {
    font-size: 2.25rem;
    font-weight: 800;
    line-height: 1.2;
    margin-bottom: 1.5rem;
    color: #1f2937;
  }
  
  .academic-content h2 {
    font-size: 1.875rem;
    font-weight: 700;
    line-height: 1.3;
    margin-top: 2.5rem;
    margin-bottom: 1rem;
    color: #1f2937;
  }
  
  .academic-content h3 {
    font-size: 1.5rem;
    font-weight: 600;
    line-height: 1.4;
    margin-top: 2rem;
    margin-bottom: 0.75rem;
    color: #374151;
  }
  
  .academic-content p {
    margin-bottom: 1.5rem;
  }
  
  /* Force blue color for inline citations with maximum specificity */
  .sophisticated-markdown a[href*="#ref-"], 
  .sophisticated-markdown a[href*="#ref-"]:link,
  .sophisticated-markdown a[href*="#ref-"]:visited,
  .sophisticated-markdown a[href*="#ref-"] strong,
  .sophisticated-markdown a[href*="#ref-"] strong:link,
  .sophisticated-markdown a[href*="#ref-"] strong:visited,
  body .sophisticated-markdown a[href*="#ref-"],
  html body .sophisticated-markdown a[href*="#ref-"],
  .content a[href*="#ref-"],
  .prose a[href*="#ref-"] {
    color: #2563eb !important;
    text-decoration: none !important;
    font-weight: 600 !important;
    padding: 0.1em 0.3em !important;
    border-radius: 0.3em !important;
    background-color: rgba(37, 99, 235, 0.1) !important;
    transition: all 0.2s ease !important;
    border: 1px solid rgba(37, 99, 235, 0.2) !important;
  }
  
  .sophisticated-markdown a[href*="#ref-"]:hover,
  html body .sophisticated-markdown a[href*="#ref-"]:hover,
  .content a[href*="#ref-"]:hover,
  .prose a[href*="#ref-"]:hover {
    background-color: rgba(37, 99, 235, 0.2) !important;
    transform: translateY(-1px) !important;
    box-shadow: 0 2px 4px rgba(37, 99, 235, 0.3) !important;
  }
  
  /* Pandoc-generated bibliography styles */
  .bibliography {
    margin-top: 3rem;
    padding-top: 2rem;
    border-top: 1px solid #e5e7eb;
  }
  
  .bibliography-title {
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 1.5rem;
    color: #1f2937;
  }
  
  .bibliography-list {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  
  .bibliography-entry {
    padding: 1rem;
    background-color: #ffffff;
    border-radius: 0.75rem;
    border: 1px solid #e5e7eb;
    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
    line-height: 1.6;
    transition: all 0.2s ease-in-out;
  }
  
  .bibliography-entry:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  }
  
  .citation-layout {
    display: flex;
    align-items: flex-start;
    gap: 0.75rem;
  }
  
  .citation-number {
    font-weight: 600;
    color: #3b82f6;
    flex-shrink: 0;
    min-width: 2rem;
    text-align: left;
  }
  
  .citation-content {
    flex: 1;
    line-height: 1.6;
  }
  
  /* Dark mode support */
  @media (prefers-color-scheme: dark) {
    .academic-content {
      color: #e5e7eb;
    }
    
    .academic-content h1,
    .academic-content h2 {
      color: #f9fafb;
    }
    
    .academic-content h3 {
      color: #d1d5db;
    }
    
    .citation-link {
      color: #60a5fa;
    }
    
    .citation-link:hover {
      background-color: #1e3a8a;
    }
    
    .bibliography {
      border-top-color: #374151;
    }
    
    .bibliography-title {
      color: #f9fafb;
    }
    
    .bibliography-entry {
      background-color: #1f2937;
      border-color: #374151;
      color: #f3f4f6;
    }
    
    .citation-number {
      color: #60a5fa;
    }
  }
  
  /* Force visible numbering in references list with maximum specificity */
  .sophisticated-markdown h2#references + p + ol,
  .sophisticated-markdown ol,
  .sophisticated-markdown #references + p + ol,
  body .sophisticated-markdown ol,
  html body .sophisticated-markdown ol {
    list-style: none !important;
    list-style-type: none !important;
    list-style-position: outside !important;
    margin: 1rem 0 1rem 0 !important;
    padding: 0 !important;
    display: block !important;
    counter-reset: list-counter !important;
  }
  
  .sophisticated-markdown ol li,
  body .sophisticated-markdown ol li,
  html body .sophisticated-markdown ol li {
    display: block !important;
    list-style: none !important;
    list-style-type: none !important;
    margin: 0 0 1rem 0 !important;
    padding: 0 0 0 3rem !important;
    line-height: 1.6 !important;
    position: relative !important;
    counter-increment: list-counter !important;
  }
  
  .sophisticated-markdown ol li::before,
  body .sophisticated-markdown ol li::before,
  html body .sophisticated-markdown ol li::before {
    content: "[" counter(list-counter) "] " !important;
    color: #3b82f6 !important;
    font-weight: 600 !important;
    position: absolute !important;
    left: 0 !important;
    top: 0 !important;
    display: inline-block !important;
  }
  
  /* Reset any conflicting marker styles */
  .sophisticated-markdown ol li::marker {
    display: none !important;
    content: none !important;
  }
  
  /* Custom references styling */
  .references-list {
    margin: 1rem 0;
  }
  
  .reference-item {
    margin-bottom: 1.5rem;
    line-height: 1.6;
    padding-left: 2.5rem;
    text-indent: -2.5rem;
    text-align: left;
  }
  
  .ref-number {
    color: #3b82f6 !important;
    font-weight: 600 !important;
    margin-right: 0.5rem;
  }
  
  /* Make sure external links in references open in new tab */
  .academic-content a[href^="http"]:not([href*="#"]) {
    color: #2563eb;
    text-decoration: underline;
    text-decoration-thickness: 1px;
    text-underline-offset: 2px;
    transition: all 0.2s ease;
  }
  
  .academic-content a[href^="http"]:not([href*="#"]):hover {
    color: #1d4ed8;
    text-decoration-thickness: 2px;
  }
  
  /* Enhanced link styling for other links */
  .academic-content a:not([href*="#ref-"]):not([href^="http"]) {
    color: #2563eb;
    text-decoration: underline;
    text-decoration-thickness: 1px;
    text-underline-offset: 2px;
    transition: all 0.2s ease;
  }
  
  .academic-content a:not([href*="#ref-"]):not([href^="http"]):hover {
    color: #1d4ed8;
    text-decoration-thickness: 2px;
  }
  
  @media (prefers-color-scheme: dark) {
    .academic-content a:not(.citation-link) {
      color: #60a5fa;
    }
    
    .academic-content a:not(.citation-link):hover {
      color: #93c5fd;
    }
  }
</style>

<script>
  // Make external links in references open in new tab
  function addTargetBlankToExternalLinks() {
    // Multiple selectors to catch all external links
    const selectors = [
      '.sophisticated-markdown a[href^="http"]',
      '.sophisticated-markdown a[href^="https"]',
      'a[href^="http"]',
      'a[href^="https"]'
    ];
    
    let totalLinks = 0;
    selectors.forEach(selector => {
      const links = document.querySelectorAll(selector);
      console.log(`Selector "${selector}" found:`, links.length);
      links.forEach(linkElement => {
        const link = linkElement as HTMLAnchorElement;
        if (link.href && !link.href.includes('#') && !link.hasAttribute('target')) {
          link.setAttribute('target', '_blank');
          link.setAttribute('rel', 'noopener noreferrer');
          console.log('Added target="_blank" to:', link.href);
          totalLinks++;
        }
      });
    });
    console.log('Total links processed:', totalLinks);
  }

  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', addTargetBlankToExternalLinks);
  } else {
    addTargetBlankToExternalLinks();
  }
  
  // Also run after a slight delay to catch any dynamically loaded content
  setTimeout(addTargetBlankToExternalLinks, 100);
</script>