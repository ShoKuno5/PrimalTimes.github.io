---
import LanguageSwitcher from '../components/LanguageSwitcher.astro';

export interface Props {
  title: string;
  description?: string;
}

const { title, description = '' } = Astro.props;

// Detect current locale and slug
const pathname = Astro.url.pathname;
const isJapanese = pathname.startsWith('/ja/');
const currentLocale = isJapanese ? 'ja' : 'en';
const currentSlug = pathname.replace(/^\/ja\//, '').replace(/^\//, '').replace(/\/$/, '');

interface NavItem {
  label: string;
  href?: string;
  external?: boolean;
  submenu?: NavItemSubitem[];
}

interface NavItemSubitem {
  label: string;
  href: string;
  external?: boolean;
}

// Create language-aware navigation
const createNav = (locale: 'en' | 'ja'): NavItem[] => {
  const prefix = locale === 'ja' ? '/ja' : '';
  const labels = locale === 'ja' ? {
    persona: 'ペルソナ',
    research: '研究',
    posts: '投稿',
    allPosts: 'すべての投稿',
    allTags: 'すべてのタグ',
    naiveHope: 'Naive Hope',
    contact: '連絡先',
    email: 'メール',
  } : {
    persona: 'Persona',
    research: 'Research',
    posts: 'Posts',
    allPosts: 'All Posts',
    allTags: 'All Tags',
    naiveHope: 'Naive Hope',
    contact: 'Contact',
    email: 'Email',
  };

  return [
    { 
      label: labels.posts, 
      submenu: [
        { label: labels.allPosts, href: `${prefix}/posts/all/` },
        { label: labels.allTags, href: `${prefix}/posts/tags/` },
      ]
    },
    { label: labels.research, href: `${prefix}/research/` },
    { label: labels.persona, href: `${prefix}/persona/` },
    { label: labels.naiveHope, href: `${prefix}/naive-hope/` },
    { 
      label: labels.contact, 
      submenu: [
        { label: labels.email, href: 'mailto:kunosho1225@g.ecc.u-tokyo.ac.jp', external: true },
        { label: 'LinkedIn', href: 'https://www.linkedin.com/in/sho-kuno-828a0133a/', external: true },
        { label: 'GitHub', href: 'https://github.com/ShoKuno5', external: true },
        { label: 'X', href: 'https://twitter.com/ReplicaSQ', external: true },
      ]
    },
  ];
};

const nav = createNav(currentLocale);
---

<!DOCTYPE html>
<html lang={currentLocale}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content={description} />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <!-- Typography -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Noto+Sans+JP:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <!-- Syntax Highlighting -->
    <link href="https://cdn.jsdelivr.net/npm/prismjs@1.29.0/themes/prism.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/prismjs@1.29.0/components/prism-core.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/prismjs@1.29.0/plugins/autoloader/prism-autoloader.min.js"></script>
    <!-- KaTeX CSS for math rendering -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.22/dist/katex.min.css" integrity="sha384-ViRYZ70/JRNFM/sw6H1y6Ec/WiGIfAb/dAs7x4HDdyYC1KC9Fkj9cBmtXYJQC5Gy" crossorigin="anonymous">
    
    <!-- KaTeX CSS fixes for proper math rendering -->
    <style is:global>
      /* Hide KaTeX mathml accessibility annotations that show raw LaTeX */
      .katex-mathml { 
        display: none !important; 
      }
      .katex-html { 
        display: inline !important; 
      }
      .katex-display { 
        display: block !important; 
        text-align: center !important; 
        margin: 1.5rem 0 !important;
      }
    </style>
    
    <!-- Enhanced math styling -->
    <style>
      /* Enhanced display math styling */
      .katex-display {
        margin: 1.5rem 0 !important;
      }
      
      /* Enhanced Math Styling for PostLayoutWithCitations */
      .sophisticated-markdown .katex {
        font-size: 1.1em !important;
      }

      .sophisticated-markdown .katex-display {
        margin: 2.5rem 0 !important;
        text-align: center !important;
        background: linear-gradient(135deg, #f8fafc, #f1f5f9) !important;
        padding: 1.5rem !important;
        border-radius: 8px !important;
        border-left: 4px solid #3b82f6 !important;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05) !important;
        position: relative !important;
      }

      .sophisticated-markdown .katex-display::before {
        content: "" !important;
        position: absolute !important;
        top: 12px !important;
        right: 12px !important;
        width: 8px !important;
        height: 8px !important;
        background: #3b82f6 !important;
        border-radius: 50% !important;
      }

      .sophisticated-markdown .math.inline {
        background: rgba(59, 130, 246, 0.08) !important;
        padding: 0.2em 0.4em !important;
        border-radius: 4px !important;
        margin: 0 0.1em !important;
        font-weight: 500 !important;
      }
      
      /* Prevent raw LaTeX from showing during loading */
      p:has(.katex-display) {
        min-height: 3rem;
      }
    </style>
    <title>{title}</title>
  </head>
  <body>
    <!-- Auto-hide navigation header -->
    <header id="main-header" class="auto-hide-header" style="
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      z-index: 1000;
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(10px);
      -webkit-backdrop-filter: blur(10px);
      border-bottom: 1px solid rgba(0, 0, 0, 0.05);
      box-shadow: 0 1px 20px rgba(0, 0, 0, 0.08);
      -webkit-transform: translateZ(0);
      transform: translateY(-100%) translateZ(0);
      transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    ">
      <div style="
        max-width: 72rem;
        margin: 0 auto;
        padding: 1rem 1.5rem;
        display: flex;
        align-items: center;
        justify-content: space-between;
        min-height: 70px;
        gap: 2rem;
        width: 100%;
        box-sizing: border-box;
      ">
        <!-- Elegant logo with gradient -->
        <a href="/" style="
          font-size: 1.5rem;
          font-weight: 700;
          background: linear-gradient(135deg, #0066cc, #8b5cf6);
          -webkit-background-clip: text;
          background-clip: text;
          color: transparent;
          text-decoration: none;
          letter-spacing: -0.025em;
          flex-shrink: 0;
        ">
          Sho Kuno
        </a>
        
        <!-- Container for navigation and hamburger -->
        <div style="display: flex; align-items: center; gap: 2rem; flex-shrink: 0;">
          <!-- Language Switcher -->
          <LanguageSwitcher currentLocale={currentLocale} currentSlug={currentSlug} />
          
          <!-- Desktop navigation -->
          <nav style="display: none;" id="desktop-nav">
            <ul style="display: flex; align-items: center; gap: 2rem; list-style: none; margin: 0; padding: 0;">
              {nav.map((item) => (
                <li style="position: relative;">
                  {item.submenu ? (
                    <div style="position: relative;" class="dropdown-parent">
                      <button style="
                        color: #4b5563; 
                        background: none;
                        border: none;
                        font-size: 0.95rem;
                        font-weight: 500;
                        cursor: pointer;
                        display: flex; 
                        align-items: center; 
                        gap: 0.5rem;
                        padding: 0.5rem 0;
                        line-height: 1.5;
                        margin: 0;
                        height: auto;
                        vertical-align: baseline;
                        transition: color 0.2s ease;
                      " class="dropdown-trigger">
                        <span>{item.label}</span>
                        <svg style="width: 1rem; height: 1rem; transition: transform 0.2s ease;" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                        </svg>
                      </button>
                      <ul style="
                        position: absolute;
                        top: 100%;
                        left: 0;
                        min-width: 200px;
                        background: white;
                        border: 1px solid rgba(0, 0, 0, 0.08);
                        border-radius: 12px;
                        box-shadow: 0 10px 40px rgba(0, 0, 0, 0.15);
                        padding: 0.5rem;
                        margin: 0;
                        list-style: none;
                        opacity: 0;
                        visibility: hidden;
                        transform: translateY(-10px);
                        transition: all 0.2s ease;
                        z-index: 1001;
                      " class="dropdown-menu">
                        {item.submenu.map((subitem) => (
                          <li>
                            <a href={subitem.href} 
                               target={subitem.external ? '_blank' : undefined}
                               rel={subitem.external ? 'noopener noreferrer' : undefined}
                               style="
                              display: block;
                              color: #374151;
                              text-decoration: none;
                              padding: 0.75rem 1rem;
                              border-radius: 8px;
                              font-size: 0.9rem;
                              transition: all 0.2s ease;
                              position: relative;
                            " class="dropdown-item">
                              <span>{subitem.label}</span>
                              {subitem.external && (
                                <svg style="width: 0.8rem; height: 0.8rem; margin-left: 0.5rem; opacity: 0.6;" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                                </svg>
                              )}
                            </a>
                          </li>
                        ))}
                      </ul>
                    </div>
                  ) : (
                    <a href={item.href} style="
                      color: #4b5563;
                      text-decoration: none;
                      font-size: 0.95rem;
                      font-weight: 500;
                      padding: 0.5rem 0;
                      line-height: 1.5;
                      display: inline-flex;
                      align-items: center;
                      transition: color 0.2s ease;
                    " class="nav-link">
                      {item.label}
                    </a>
                  )}
                </li>
              ))}
            </ul>
          </nav>
          
          <!-- Elegant hamburger button -->
          <button 
            id="nav-toggle" 
            type="button" 
            aria-label="Toggle navigation menu" 
            aria-expanded="false"
            style="
              display: block;
              width: 44px;
              height: 44px;
              padding: 10px;
              border: none;
              background: transparent;
              cursor: pointer;
              border-radius: 12px;
              position: relative;
              z-index: 1001;
              transition: all 0.2s ease;
              -webkit-tap-highlight-color: transparent;
              -webkit-touch-callout: none;
              -webkit-user-select: none;
              touch-action: manipulation;
              flex-shrink: 0;
            "
            class="hamburger-btn"
          >
          <div style="
            width: 24px;
            height: 18px;
            position: relative;
            margin: 0 auto;
          ">
            <span style="
              display: block;
              width: 24px;
              height: 2px;
              background-color: #374151;
              border-radius: 2px;
              position: absolute;
              top: 0;
              transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            " class="hamburger-line line-1"></span>
            <span style="
              display: block;
              width: 24px;
              height: 2px;
              background-color: #374151;
              border-radius: 2px;
              position: absolute;
              top: 8px;
              transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            " class="hamburger-line line-2"></span>
            <span style="
              display: block;
              width: 24px;
              height: 2px;
              background-color: #374151;
              border-radius: 2px;
              position: absolute;
              top: 16px;
              transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            " class="hamburger-line line-3"></span>
          </div>
        </button>
        </div>
        
        <!-- Elegant mobile navigation -->
        <nav id="nav-menu" style="
          display: none;
          position: absolute;
          top: 100%;
          left: 0;
          right: 0;
          background: rgba(255, 255, 255, 0.98);
          backdrop-filter: blur(20px);
          -webkit-backdrop-filter: blur(20px);
          border-bottom: 1px solid rgba(0, 0, 0, 0.08);
          box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12);
          z-index: 999;
          opacity: 0;
          transform: translateY(-10px);
          transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        " class="mobile-menu">
          <ul style="padding: 1.5rem; margin: 0; list-style: none;">
            {nav.map((item) => (
              <li style="margin-bottom: 0.25rem;">
                {item.submenu ? (
                  <details style="margin-bottom: 0.5rem;" class="mobile-dropdown">
                    <summary style="
                      cursor: pointer; 
                      color: #374151; 
                      font-weight: 500;
                      padding: 1rem 0; 
                      display: flex; 
                      align-items: center; 
                      justify-content: space-between;
                      border-bottom: 1px solid rgba(0, 0, 0, 0.06);
                      transition: color 0.2s ease;
                    ">
                      <span>{item.label}</span>
                      <svg style="width: 1.25rem; height: 1.25rem; transition: transform 0.2s ease;" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                      </svg>
                    </summary>
                    <ul style="margin-left: 1rem; margin-top: 0.5rem; margin-bottom: 1rem;">
                      {item.submenu.map((subitem) => (
                        <li>
                          <a href={subitem.href} 
                             target={subitem.external ? '_blank' : undefined}
                             rel={subitem.external ? 'noopener noreferrer' : undefined}
                             style="
                            display: flex; 
                            align-items: center;
                            color: #6B7280; 
                            text-decoration: none; 
                            padding: 0.75rem 0;
                            font-size: 0.95rem;
                            transition: color 0.2s ease;
                            border-left: 2px solid transparent;
                            padding-left: 1rem;
                          " class="mobile-sub-link">
                            <span>{subitem.label}</span>
                            {subitem.external && (
                              <svg style="width: 0.8rem; height: 0.8rem; margin-left: 0.5rem; opacity: 0.6;" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                              </svg>
                            )}
                          </a>
                        </li>
                      ))}
                    </ul>
                  </details>
                ) : (
                  <a href={item.href} style="
                    display: block; 
                    color: #374151; 
                    text-decoration: none; 
                    padding: 1rem 0;
                    font-weight: 500;
                    font-size: 1.05rem;
                    border-bottom: 1px solid rgba(0, 0, 0, 0.06);
                    transition: color 0.2s ease;
                  " class="mobile-nav-link">
                    {item.label}
                  </a>
                )}
              </li>
            ))}
          </ul>
        </nav>
      </div>
    </header>
    
    <script src="/nav-toggle.js?v=2025" defer is:inline></script>
    
    <!-- Auto-hide Navigation Script -->
    <script is:inline>
    (function() {
      'use strict';
      
      let lastScrollY = 0;
      let isHeaderVisible = false;
      let hideTimeout = null;
      let scrollBuffer = []; // Track recent scroll positions
      let scrollDirection = 'none';
      
      const header = document.getElementById('main-header');
      if (!header) return;
      
      function showHeader() {
        if (!isHeaderVisible) {
          header.style.transform = 'translateY(0) translateZ(0)';
          isHeaderVisible = true;
        }
        
        // Clear existing timeout
        if (hideTimeout) {
          clearTimeout(hideTimeout);
          hideTimeout = null;
        }
        
        // Auto-hide after 3 seconds if not interacting
        hideTimeout = setTimeout(() => {
          if (window.pageYOffset > 100) { // Only auto-hide if scrolled down
            hideHeader();
          }
        }, 3000);
      }
      
      function hideHeader() {
        if (isHeaderVisible) {
          header.style.transform = 'translateY(-100%) translateZ(0)';
          isHeaderVisible = false;
        }
        
        if (hideTimeout) {
          clearTimeout(hideTimeout);
          hideTimeout = null;
        }
      }
      
      // Smart scroll behavior with proper direction detection
      function handleScroll() {
        const currentScrollY = window.pageYOffset;
        const scrollDelta = currentScrollY - lastScrollY;
        
        // Add to scroll buffer (keep last 5 scroll events)
        scrollBuffer.push(scrollDelta);
        if (scrollBuffer.length > 5) {
          scrollBuffer.shift();
        }
        
        // Calculate overall scroll direction from buffer
        const totalDelta = scrollBuffer.reduce((sum, delta) => sum + delta, 0);
        const avgDelta = totalDelta / scrollBuffer.length;
        
        if (currentScrollY < 100) {
          // Always show near top of page
          showHeader();
          scrollDirection = 'top';
        } else {
          const isAtBottom = (window.innerHeight + currentScrollY) >= document.documentElement.scrollHeight - 10;
          
          if (isAtBottom) {
            // Show at bottom for easy navigation
            showHeader();
            scrollDirection = 'bottom';
          } else if (Math.abs(avgDelta) > 5) {
            // Determine direction based on consistent scrolling
            if (avgDelta < -15 && scrollDirection !== 'up') {
              // Deliberate scroll up (at least 15px average upward)
              showHeader();
              scrollDirection = 'up';
            } else if (avgDelta > 10 && scrollDirection !== 'down') {
              // Deliberate scroll down
              if (isHeaderVisible) {
                hideHeader();
              }
              scrollDirection = 'down';
            }
          }
          // Ignore small scroll movements (reading micro-adjustments)
        }
        
        lastScrollY = currentScrollY;
      }
      
      // Show on mouse movement near top or deliberate seeking
      function handleMouseMove(e) {
        if (e.clientY < 120) { // Mouse in top 120px
          showHeader();
        }
      }
      
      // Show on keyboard navigation
      function handleKeyPress(e) {
        // Show on common navigation keys
        if (['Tab', 'Escape', 'Home', 'End', 'ArrowUp', 'ArrowDown'].includes(e.key)) {
          showHeader();
        }
      }
      
      // Show after period of inactivity (user might want to navigate)
      let inactivityTimer = null;
      function resetInactivityTimer() {
        if (inactivityTimer) clearTimeout(inactivityTimer);
        
        // Show menu after 10 seconds of no interaction (in case user wants to navigate)
        inactivityTimer = setTimeout(() => {
          if (window.pageYOffset > 200) { // Only if not near top
            showHeader();
          }
        }, 10000);
      }
      
      // Show on header hover
      function handleHeaderHover() {
        showHeader();
      }
      
      // Throttle scroll events
      let scrollTicking = false;
      function throttledScroll() {
        if (!scrollTicking) {
          requestAnimationFrame(function() {
            handleScroll();
            scrollTicking = false;
          });
          scrollTicking = true;
        }
      }
      
      // Initialize when DOM is ready
      function init() {
        // Start with header hidden if not at top
        if (window.pageYOffset > 50) {
          hideHeader();
        } else {
          showHeader();
        }
        
        // Event listeners
        window.addEventListener('scroll', throttledScroll, { passive: true });
        document.addEventListener('mousemove', handleMouseMove, { passive: true });
        document.addEventListener('keydown', handleKeyPress, { passive: true });
        header.addEventListener('mouseenter', handleHeaderHover);
        
        // Reset inactivity timer on any user interaction
        ['scroll', 'mousemove', 'keydown', 'touchstart'].forEach(event => {
          document.addEventListener(event, resetInactivityTimer, { passive: true });
        });
        
        // Don't hide header when user is interacting with it
        header.addEventListener('mouseleave', () => {
          if (window.pageYOffset > 200) {
            hideTimeout = setTimeout(hideHeader, 2000); // Longer delay
          }
        });
        
        // Start inactivity timer
        resetInactivityTimer();
      }
      
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', init);
      } else {
        init();
      }
      
    })();
    </script>
    
    <!-- Beautiful interactive styles -->
    <style>
      /* Auto-hide header styles */
      .auto-hide-header.visible {
        transform: translateY(0) translateZ(0) !important;
      }
      
      .auto-hide-header.hidden {
        transform: translateY(-100%) translateZ(0) !important;
      }
      
      /* Navigation hover effects */
      .nav-link:hover {
        color: #0066cc !important;
      }
      
      .dropdown-trigger:hover {
        color: #0066cc !important;
      }
      
      .dropdown-parent:hover .dropdown-menu {
        opacity: 1 !important;
        visibility: visible !important;
        transform: translateY(0) !important;
      }
      
      .dropdown-item:hover {
        background-color: #f8fafc !important;
        color: #0066cc !important;
      }
      
      /* Hamburger button hover effects */
      .hamburger-btn:hover {
        background-color: rgba(0, 102, 204, 0.08) !important;
      }
      
      .hamburger-btn:active {
        transform: scale(0.95) !important;
      }
      
      /* Hamburger active state */
      .hamburger-btn.active .line-1 {
        transform: rotate(45deg) translate(5px, 5px) !important;
      }
      
      .hamburger-btn.active .line-2 {
        opacity: 0 !important;
      }
      
      .hamburger-btn.active .line-3 {
        transform: rotate(-45deg) translate(7px, -6px) !important;
      }
      
      /* Mobile menu active state */
      .mobile-menu.active {
        display: block !important;
        opacity: 1 !important;
        transform: translateY(0) !important;
      }
      
      /* Force mobile menu visibility when active */
      #nav-menu.active {
        display: block !important;
        opacity: 1 !important;
        transform: translateY(0) !important;
      }
      
      /* Mobile navigation hover effects */
      .mobile-nav-link:hover {
        color: #0066cc !important;
        padding-left: 1rem !important;
      }
      
      .mobile-sub-link:hover {
        color: #0066cc !important;
        border-left-color: #0066cc !important;
      }
      
      /* Mobile dropdown arrow rotation */
      .mobile-dropdown[open] summary svg {
        transform: rotate(180deg) !important;
      }
      
      /* Responsive behavior */
      @media (min-width: 1024px) {
        .hamburger-btn {
          display: none !important;
        }
        
        #desktop-nav {
          display: block !important;
        }
      }
      
      @media (max-width: 1023px) {
        #desktop-nav {
          display: none !important;
        }
        
        /* Ensure consistent hamburger positioning on mobile */
        .hamburger-btn {
          margin-right: 0 !important;
          position: relative !important;
          right: 0 !important;
        }
        
        /* Ensure header container takes full width on mobile */
        header > div {
          padding-left: 1rem !important;
          padding-right: 1rem !important;
        }
      }
    </style>
    
    <main style="min-height: 100vh; padding-top: 90px;">
      <slot />
    </main>
    
    <footer class="border-t border-gray-200 mt-24 bg-gray-50">
      <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12 text-center">
        <p class="text-sm text-gray-600">
          © {new Date().getFullYear()} Sho Kuno. All rights reserved.
        </p>
      </div>
    </footer>
  </body>
</html>

<style>
  /* Hide scrollbar for Chrome, Safari and Opera */
  *::-webkit-scrollbar {
    display: none;
  }

  /* Hide scrollbar for IE, Edge and Firefox */
  * {
    -ms-overflow-style: none;  /* IE and Edge */
    scrollbar-width: none;  /* Firefox */
  }
</style>