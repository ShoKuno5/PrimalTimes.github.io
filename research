#!/usr/bin/env bash

# BLOG RESEARCH AUTOMATION CONTROLLER
# Simple interface for all blog improvement workflows

set -euo pipefail

# Colors for output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BOLD='\033[1m'
NC='\033[0m'

# Script directory
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

show_help() {
    echo -e "${BOLD}${BLUE}🧬 Blog Research Automation Controller${NC}"
    echo ""
    echo "USAGE:"
    echo "  ./research [COMMAND]"
    echo ""
    echo "COMMANDS:"
    echo -e "  ${GREEN}parallel${NC}     🚀 Full parallel deep research (3 agents with real-time dashboard)"
    echo -e "  ${GREEN}simple${NC}       📝 Simple parallel research (basic mode)"
    echo -e "  ${GREEN}nightly${NC}      🌙 Nightly improvements (scheduled mode)"
    echo -e "  ${GREEN}schedule${NC}     ⏰ Schedule nightly research at specific time"
    echo -e "  ${GREEN}status${NC}       📊 Check current research status"
    echo -e "  ${GREEN}logs${NC}         📋 View recent logs"
    echo -e "  ${GREEN}clean${NC}        🧹 Clean up old logs and temporary files"
    echo ""
    echo "EXAMPLES:"
    echo "  ./research parallel           # Run full parallel research now"
    echo "  ./research schedule 02:00     # Schedule nightly research at 2 AM"
    echo "  ./research status             # Check if anything is running"
    echo "  ./research logs               # View recent logs"
    echo ""
    echo -e "${YELLOW}Note: All research uses Claude Max plan (no extra billing)${NC}"
}

run_parallel() {
    echo -e "${BLUE}🚀 Starting enhanced parallel deep research...${NC}"
    echo -e "${YELLOW}Note: Using enhanced prompts for deeper insights${NC}"
    cd "$SCRIPT_DIR"
    ./scripts/parallel-research-enhanced.sh
}

run_simple() {
    echo -e "${BLUE}📝 Starting simple parallel research...${NC}"
    cd "$SCRIPT_DIR"
    ./scripts/parallel-simple.sh
}

run_nightly() {
    echo -e "${BLUE}🌙 Starting nightly improvements...${NC}"
    cd "$SCRIPT_DIR"
    ./scripts/nightly-enhanced.sh
}

schedule_nightly() {
    local time="$1"
    echo -e "${BLUE}⏰ Scheduling nightly research at $time...${NC}"
    
    # Clear existing cron jobs for this project
    crontab -l 2>/dev/null | grep -v "blog.*research" | crontab -
    
    # Parse time (HH:MM format)
    local hour minute
    IFS=':' read -r hour minute <<< "$time"
    
    # Add new cron job
    (crontab -l 2>/dev/null; echo "$minute $hour * * * cd $SCRIPT_DIR && ./scripts/nightly-enhanced.sh") | crontab -
    
    echo -e "${GREEN}✅ Scheduled nightly research at $time daily${NC}"
    echo "View with: crontab -l"
}

check_status() {
    echo -e "${BLUE}📊 Checking research status...${NC}"
    
    # Check for running research processes
    if pgrep -f "parallel-research\|nightly-" > /dev/null; then
        echo -e "${GREEN}🔄 Research is currently running${NC}"
        
        # Show running processes
        echo ""
        echo "Running processes:"
        ps aux | grep -E "(parallel-research|nightly-)" | grep -v grep || true
        
        # Check parallel research progress if running
        if [ -d "/tmp/parallel-research" ]; then
            echo ""
            echo "Parallel research progress:"
            find /tmp/parallel-research -name "deep_*_analysis.md" -exec sh -c 'echo "$(basename $(dirname {})): $(wc -l < {} 2>/dev/null || echo 0) lines"' \;
        fi
    else
        echo -e "${YELLOW}📴 No research currently running${NC}"
    fi
    
    # Show scheduled jobs
    echo ""
    echo "Scheduled jobs:"
    crontab -l 2>/dev/null | grep "blog.*research" || echo "No scheduled research found"
}

view_logs() {
    echo -e "${BLUE}📋 Recent research logs:${NC}"
    echo ""
    
    if [ -d "logs" ]; then
        ls -la logs/*.log 2>/dev/null | tail -10 || echo "No logs found"
        echo ""
        echo "To view a specific log:"
        echo "  tail -f logs/[filename]"
        echo "  less logs/[filename]"
    else
        echo "No logs directory found"
    fi
}

clean_up() {
    echo -e "${BLUE}🧹 Cleaning up...${NC}"
    
    # Clean old logs (keep last 10)
    if [ -d "logs" ]; then
        ls -t logs/*.log 2>/dev/null | tail -n +11 | xargs -r rm -f
        echo "Cleaned old log files"
    fi
    
    # Clean temporary research files
    rm -rf /tmp/parallel-research /tmp/research-progress /tmp/blog-improvements 2>/dev/null || true
    echo "Cleaned temporary research files"
    
    # Clean git worktrees
    git worktree prune 2>/dev/null || true
    git branch | grep -E "(parallel-research-|nightly-improve-)" | xargs -r git branch -D 2>/dev/null || true
    echo "Cleaned git worktrees and branches"
    
    echo -e "${GREEN}✅ Cleanup completed${NC}"
}

# Main command handling
case "${1:-help}" in
    "parallel"|"p")
        run_parallel
        ;;
    "simple"|"s")
        run_simple
        ;;
    "nightly"|"n")
        run_nightly
        ;;
    "schedule")
        if [ $# -lt 2 ]; then
            echo -e "${RED}Error: Please specify time (HH:MM format)${NC}"
            echo "Example: ./research schedule 02:00"
            exit 1
        fi
        schedule_nightly "$2"
        ;;
    "status"|"st")
        check_status
        ;;
    "logs"|"l")
        view_logs
        ;;
    "clean"|"c")
        clean_up
        ;;
    "help"|"h"|"-h"|"--help")
        show_help
        ;;
    *)
        echo -e "${RED}Error: Unknown command '$1'${NC}"
        echo ""
        show_help
        exit 1
        ;;
esac